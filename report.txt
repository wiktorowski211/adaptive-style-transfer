TensorFlow 2.0 Upgrade Script
-----------------------------
Converted 26 files
Detected 12 issues that require attention
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
File: adaptive-style-transfer/model.py
--------------------------------------------------------------------------------
adaptive-style-transfer/model.py:349:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
adaptive-style-transfer/model.py:353:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
adaptive-style-transfer/model.py:518:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
adaptive-style-transfer/model.py:522:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: adaptive-style-transfer/ops.py
--------------------------------------------------------------------------------
adaptive-style-transfer/ops.py:42:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
adaptive-style-transfer/ops.py:43:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
adaptive-style-transfer/ops.py:76:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
adaptive-style-transfer/ops.py:78:15: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: adaptive-style-transfer/evaluation/feature_extractor/nets/nets_factory.py
--------------------------------------------------------------------------------
adaptive-style-transfer/evaluation/feature_extractor/nets/nets_factory.py:25:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: adaptive-style-transfer/evaluation/feature_extractor/preprocessing/preprocessing_factory.py
--------------------------------------------------------------------------------
adaptive-style-transfer/evaluation/feature_extractor/preprocessing/preprocessing_factory.py:24:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: adaptive-style-transfer/evaluation/feature_extractor/preprocessing/vgg_preprocessing.py
--------------------------------------------------------------------------------
adaptive-style-transfer/evaluation/feature_extractor/preprocessing/vgg_preprocessing.py:39:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
adaptive-style-transfer/evaluation/feature_extractor/preprocessing/vgg_preprocessing.py:284:18: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
================================================================================
Detailed log follows:

================================================================================
================================================================================
Input tree: 'adaptive-style-transfer/'
================================================================================
--------------------------------------------------------------------------------
Processing file 'adaptive-style-transfer/prepare_dataset.py'
 outputting to 'adaptive-style-transfer/prepare_dataset.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'adaptive-style-transfer/img_augm.py'
 outputting to 'adaptive-style-transfer/img_augm.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'adaptive-style-transfer/__init__.py'
 outputting to 'adaptive-style-transfer/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'adaptive-style-transfer/model.py'
 outputting to 'adaptive-style-transfer/model.py'
--------------------------------------------------------------------------------

86:21: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
87:26: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
92:17: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

92:17: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
93:38: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
96:35: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
99:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
154:50: INFO: Added keywords to args of function 'tf.reduce_mean'
158:47: INFO: Added keywords to args of function 'tf.reduce_mean'
162:48: INFO: Added keywords to args of function 'tf.reduce_mean'
180:48: INFO: Added keywords to args of function 'tf.reduce_mean'
198:21: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
204:25: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
204:43: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
207:36: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
210:36: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
219:20: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
219:20: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
221:20: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
221:20: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
223:20: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
223:20: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
225:18: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
225:18: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
226:46: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
226:46: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
229:24: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
229:24: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
231:24: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
231:24: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
233:24: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
233:24: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
235:22: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
235:22: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
236:24: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
236:24: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
237:45: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
237:45: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
240:19: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
240:19: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
241:18: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
241:18: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
242:38: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
242:38: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
245:19: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
245:19: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
246:18: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
246:18: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
247:40: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
247:40: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
249:38: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
249:38: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
250:26: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
250:26: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
253:17: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

253:17: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
254:35: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
299:18: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
349:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
353:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
392:18: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
463:18: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
518:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
522:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'adaptive-style-transfer/ops.py'
 outputting to 'adaptive-style-transfer/ops.py'
--------------------------------------------------------------------------------

40:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
42:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
42:16: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
42:62: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
42:62: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
43:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
43:17: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
43:64: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
43:64: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
44:25: INFO: Added keywords to args of function 'tf.nn.moments'
44:25: INFO: Renamed keyword argument for tf.nn.moments from keep_dims to keepdims
46:14: INFO: Renamed 'tf.rsqrt' to 'tf.math.rsqrt'
52:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
54:47: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
54:47: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
62:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
63:17: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
64:45: INFO: Added keywords to args of function 'tf.shape'
75:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
76:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
76:17: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
77:33: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
77:33: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
78:15: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
78:15: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
79:43: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
79:43: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'adaptive-style-transfer/utils.py'
 outputting to 'adaptive-style-transfer/utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'adaptive-style-transfer/module.py'
 outputting to 'adaptive-style-transfer/module.py'
--------------------------------------------------------------------------------

32:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
34:12: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
36:19: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
40:13: INFO: Added keywords to args of function 'tf.pad'
70:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
72:12: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
74:19: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
78:16: INFO: Added keywords to args of function 'tf.pad'
80:16: INFO: Added keywords to args of function 'tf.pad'
117:13: INFO: Added keywords to args of function 'tf.pad'
135:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
137:12: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
139:19: INFO: Renamed 'tf.get_variable_scope' to 'tf.compat.v1.get_variable_scope'
177:11: INFO: Added keywords to args of function 'tf.reduce_mean'
181:11: INFO: Added keywords to args of function 'tf.reduce_mean'
184:11: INFO: Added keywords to args of function 'tf.reduce_mean'
187:11: INFO: Added keywords to args of function 'tf.reduce_mean'
228:34: INFO: tf.assert_equal requires manual check. tf.assert_equal has been changed to return None, the data argument has been removed, and arguments have been reordered.
The calls have been converted to compat.v1 for safety (even though  they may already have been correct).
228:34: INFO: Renamed 'tf.assert_equal' to 'tf.compat.v1.assert_equal'
228:50: INFO: Added keywords to args of function 'tf.shape'
229:21: INFO: Added keywords to args of function 'tf.shape'
230:61: INFO: Added keywords to args of function 'tf.reduce_prod'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'adaptive-style-transfer/main.py'
 outputting to 'adaptive-style-transfer/main.py'
--------------------------------------------------------------------------------

20:0: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
143:15: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
145:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
166:4: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'adaptive-style-transfer/.history/main_20201016123726.py'
 outputting to 'adaptive-style-transfer/.history/main_20201016123726.py'
--------------------------------------------------------------------------------

20:0: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
143:15: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
145:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
166:4: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'adaptive-style-transfer/.history/main_20201107123032.py'
 outputting to 'adaptive-style-transfer/.history/main_20201107123032.py'
--------------------------------------------------------------------------------

20:0: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
143:15: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
145:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
166:4: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'adaptive-style-transfer/.history/main_20201107123027.py'
 outputting to 'adaptive-style-transfer/.history/main_20201107123027.py'
--------------------------------------------------------------------------------

20:0: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
143:15: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
145:9: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
166:4: INFO: Renamed 'tf.app.run' to 'tf.compat.v1.app.run'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'adaptive-style-transfer/evaluation/check_fc8_labels.py'
 outputting to 'adaptive-style-transfer/evaluation/check_fc8_labels.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'adaptive-style-transfer/evaluation/eval_deception_score.py'
 outputting to 'adaptive-style-transfer/evaluation/eval_deception_score.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'adaptive-style-transfer/evaluation/__init__.py'
 outputting to 'adaptive-style-transfer/evaluation/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'adaptive-style-transfer/evaluation/download_evaluation_data.py'
 outputting to 'adaptive-style-transfer/evaluation/download_evaluation_data.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'adaptive-style-transfer/evaluation/logger.py'
 outputting to 'adaptive-style-transfer/evaluation/logger.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'adaptive-style-transfer/evaluation/feature_extractor/__init__.py'
 outputting to 'adaptive-style-transfer/evaluation/feature_extractor/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'adaptive-style-transfer/evaluation/feature_extractor/features.py'
 outputting to 'adaptive-style-transfer/evaluation/feature_extractor/features.py'
--------------------------------------------------------------------------------

49:13: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
57:15: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
58:20: INFO: Renamed 'tf.train.import_meta_graph' to 'tf.compat.v1.train.import_meta_graph'
63:39: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'adaptive-style-transfer/evaluation/feature_extractor/feature_extractor.py'
 outputting to 'adaptive-style-transfer/evaluation/feature_extractor/feature_extractor.py'
--------------------------------------------------------------------------------

55:11: INFO: Renamed 'tf.gfile.IsDirectory' to 'tf.io.gfile.isdir'
89:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
90:27: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
94:36: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
112:48: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
113:38: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
118:24: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
119:21: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
120:36: INFO: Renamed 'tf.GPUOptions' to 'tf.compat.v1.GPUOptions'
121:24: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'adaptive-style-transfer/evaluation/feature_extractor/image_getter.py'
 outputting to 'adaptive-style-transfer/evaluation/feature_extractor/image_getter.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'adaptive-style-transfer/evaluation/feature_extractor/nets/vgg.py'
 outputting to 'adaptive-style-transfer/evaluation/feature_extractor/nets/vgg.py'
--------------------------------------------------------------------------------

62:42: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

63:41: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
63:41: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
92:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
153:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
203:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
270:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'adaptive-style-transfer/evaluation/feature_extractor/nets/nets_factory.py'
 outputting to 'adaptive-style-transfer/evaluation/feature_extractor/nets/nets_factory.py'
--------------------------------------------------------------------------------

25:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'adaptive-style-transfer/evaluation/feature_extractor/nets/__init__.py'
 outputting to 'adaptive-style-transfer/evaluation/feature_extractor/nets/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'adaptive-style-transfer/evaluation/feature_extractor/preprocessing/preprocessing_factory.py'
 outputting to 'adaptive-style-transfer/evaluation/feature_extractor/preprocessing/preprocessing_factory.py'
--------------------------------------------------------------------------------

24:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'adaptive-style-transfer/evaluation/feature_extractor/preprocessing/__init__.py'
 outputting to 'adaptive-style-transfer/evaluation/feature_extractor/preprocessing/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'adaptive-style-transfer/evaluation/feature_extractor/preprocessing/vgg_preprocessing.py'
 outputting to 'adaptive-style-transfer/evaluation/feature_extractor/preprocessing/vgg_preprocessing.py'
--------------------------------------------------------------------------------

39:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
69:19: INFO: Added keywords to args of function 'tf.shape'
84:12: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
131:6: INFO: Added keywords to args of function 'tf.shape'
146:47: INFO: Added keywords to args of function 'tf.shape'
169:18: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
171:17: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
192:19: INFO: Added keywords to args of function 'tf.shape'
193:18: INFO: Added keywords to args of function 'tf.shape'
252:18: INFO: Added keywords to args of function 'tf.convert_to_tensor'
254:11: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
255:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
256:18: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
258:10: INFO: Added keywords to args of function 'tf.cond'
261:15: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
262:14: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
277:18: INFO: Added keywords to args of function 'tf.convert_to_tensor'
279:10: INFO: Added keywords to args of function 'tf.shape'
284:18: WARNING: tf.image.resize_bilinear called with align_corners argument, requires manual check: align_corners is not supported by tf.image.resize, the new default transformation is close to what v1 provided. If you require exactly the same transformation as before, use compat.v1.image.resize_bilinear.
284:18: INFO: Changed tf.image.resize_bilinear call to tf.image.resize(..., method=tf.image.ResizeMethod.BILINEAR).
313:16: INFO: Renamed 'tf.random_uniform' to 'tf.random.uniform'
319:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
339:10: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
--------------------------------------------------------------------------------

